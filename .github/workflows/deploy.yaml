name: Build and upload assets

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    name: Build and upload (${{ matrix.os }})

    steps:
      - name: Fix CRLF on Windows
        if: runner.os == 'Windows'
        run: git config --global core.autocrlf false

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run Go tests
        run: go test ./...

      - name: Build project
        shell: bash
        run: |
          mkdir -p bin
          if [ "$RUNNER_OS" == "Linux" ]; then
            go build -v -ldflags="-s -w -extldflags=-static" -tags netgo,osusergo -o ./bin/kobrad .
            archive="kobrad-${{ github.event.release.tag_name }}-linux.zip"
          elif [ "$RUNNER_OS" == "Windows" ]; then
            go build -v -ldflags="-s -w" -o ./bin/kobrad.exe .
            archive="kobrad-${{ github.event.release.tag_name }}-windows.zip"
            powershell "Compress-Archive -Path bin/* -DestinationPath $archive"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            go build -v -ldflags="-s -w" -o ./bin/kobrad .
            archive="kobrad-${{ github.event.release.tag_name }}-macos.zip"
          fi

          if [ "$RUNNER_OS" != "Windows" ]; then
            zip -r "$archive" ./bin/*
          fi

          echo "ASSET_NAME=$archive" >> $GITHUB_ENV

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

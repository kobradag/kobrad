name: Build and upload assets
on:
  release:
    types: [published]

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    name: Build and Upload on ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Build on Linux
        if: runner.os == 'Linux'
        run: |
          mkdir -p bin
          go build -v -ldflags="-s -w -extldflags=-static" -tags netgo,osusergo -o ./bin/ . ./cmd/...
          archive="bin/kobrad-${{ github.event.release.tag_name }}-linux.zip"
          zip -r "${archive}" ./bin/*
          echo "archive=${archive}" >> $GITHUB_ENV
          echo "asset_name=kobrad-${{ github.event.release.tag_name }}-linux.zip" >> $GITHUB_ENV

      - name: Build on Windows
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mkdir -p bin
          go build -v -ldflags="-s -w" -o ./bin/ . ./cmd/...
          archive="bin/kobrad-${{ github.event.release.tag_name }}-win64.zip"
          powershell -Command "Compress-Archive -Path bin/* -DestinationPath \"${archive}\""
          echo "archive=${archive}" >> $GITHUB_ENV
          echo "asset_name=kobrad-${{ github.event.release.tag_name }}-win64.zip" >> $GITHUB_ENV

      - name: Build on MacOS
        if: runner.os == 'macOS'
        run: |
          mkdir -p bin
          go build -v -ldflags="-s -w" -o ./bin/ . ./cmd/...
          archive="bin/kobrad-${{ github.event.release.tag_name }}-osx.zip"
          zip -r "${archive}" ./bin/*
          echo "archive=${archive}" >> $GITHUB_ENV
          echo "asset_name=kobrad-${{ github.event.release.tag_name }}-osx.zip" >> $GITHUB_ENV

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.archive }}
          asset_name: ${{ env.asset_name }}
          asset_content_type: application/zip

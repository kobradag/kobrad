name: Race

on:
  schedule:
    - cron: "0 0 * * *"  
  workflow_dispatch:    

jobs:
  race_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        branch: [ master, latest ]

    name: Race detection on ${{ matrix.branch }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Determine target branch
        id: set_branch
        shell: bash
        run: |
          git fetch --all

          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "🔁 Manual dispatch: using ${{ github.ref_name }}"
            echo "run_on=${{ github.ref_name }}" >> $GITHUB_ENV

          elif [[ "${{ matrix.branch }}" == "master" ]]; then
            echo "🏷 Using master"
            echo "run_on=master" >> $GITHUB_ENV

          elif [[ "${{ matrix.branch }}" == "latest" ]]; then
            echo "🔍 Searching for latest dev branch..."
            branch=$(git branch -r | grep -E 'origin/v[0-9]+\.[0-9]+\.[0-9]+-dev' | sed 's|origin/||' | sort -Vr | head -1)

            if [[ -z "$branch" ]]; then
              echo "❌ No dev branches found matching pattern 'vX.Y.Z-dev'"
              echo "Available branches:"
              git branch -r
              exit 1
            fi

            echo "✅ Found latest dev branch: $branch"
            echo "run_on=$branch" >> $GITHUB_ENV
          fi

      - name: Checkout target branch
        run: |
          echo "Checking out branch: $run_on"
          git fetch origin $run_on
          git checkout $run_on

      - name: Run race tests
        run: |
          echo "🧪 Running go test -race on $run_on"
          go test -timeout 20m -race ./...
